name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Transfer Docker Compose Files
        env:
          SSHPASS: ${{ secrets.SERVER_PASSWORD }}
        run: |
          echo "Transferring Docker Compose files..."
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
            mkdir -p /tmp/docker-compose
          EOF
          tar --ignore-failed-read -czf - . | sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'cat > /tmp/docker-compose-files.tar.gz'

      - name: Deploy Application with Docker Compose
        env:
          SSHPASS: ${{ secrets.SERVER_PASSWORD }}
        run: |
          echo "Starting application deployment with Docker Compose..."
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
          # Распаковываем приложение
          rm -rf /opt/express-app
          mkdir -p /opt/express-app
          tar -xzf /tmp/app.tar.gz -C /opt/express-app
          rm /tmp/app.tar.gz
          
          # Перемещаем docker-compose.yml
          mv /tmp/docker-compose.yml /opt/express-app/docker-compose.yml

          # Переходим в каталог приложения
          cd /opt/express-app

          # Удаляем старые контейнеры и образы
          docker-compose down --remove-orphans
          docker-compose build
          
          # Запускаем новое развертывание
          docker-compose up -d
          EOF
          echo "Deployment completed successfully"
