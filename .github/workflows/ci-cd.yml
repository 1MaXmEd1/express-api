name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          docker build -t express-app:latest .

      - name: Deploy to server
        env:
          SSHPASS: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
          # Очистка системы перед загрузкой
          docker system prune -af || true
          EOF

          # Передача Docker-образа
          docker save express-app:latest | bzip2 | sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'bunzip2 | docker load && docker images | grep express-app'

          # Деплой нового контейнера
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
          if [ "\$(docker ps -q -f name=express-app)" ]; then
              docker stop express-app || true
              docker rm express-app || true
          fi

          # Проверка свободного порта
          if lsof -i:3000; then
              fuser -k 3000/tcp
          fi

          # Запуск нового контейнера
          if ! docker run -d --name express-app -p 3000:3000 express-app:latest; then
              echo "Ошибка при запуске контейнера express-app"
              exit 1
          fi
          EOF

        
          EOF
